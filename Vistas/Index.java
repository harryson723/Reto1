/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Classes.Conexion;
import Classes.Empleado;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author YanethM
 */
public class Index extends javax.swing.JFrame implements ActionListener, MouseListener {

    public PersonTable personTable;
    public PanelNavigation panelNavigation;
    public PanelChangePass panelChangePass;
    public Conexion conexion = new Conexion();
    public String user = "MisionTic", pass = "Ciclo2";
    public int indexWidth, indexHeight;

    // variables de tamano de la ventana
    public Index() {
        initComponents();
        this.setLocationRelativeTo(null);
        // tamanos de las vistas
        indexWidth = this.getWidth();
        indexHeight = this.getHeight();
        int personTableWidth = 763;
        int personTableHeight = 385;
        int panelNavigationWidth = 673;
        int panelNavigationHeight = 414;
        int panelChangeWidth = 493;
        int panelChangenHeight = 345;
        // inicializar vistas
        personTable = new PersonTable();
        panelNavigation = new PanelNavigation();
        panelChangePass = new PanelChangePass();

        // anadir al jframe
        personTable.setBounds(0, 0, personTableWidth, personTableHeight);
        personTable.setVisible(false);
        panelNavigation.setBounds(0, 0, panelNavigationWidth, panelNavigationHeight);
        panelNavigation.setVisible(false);
        panelChangePass.setBounds(0, 0, panelChangeWidth, panelChangenHeight);
        panelChangePass.setVisible(false);
        this.add(personTable);
        this.add(panelNavigation);
        this.add(panelChangePass);
        // anadir eventos a los botones
        this.buttonLogin.addActionListener(this);
        this.buttonChangePass.addActionListener(this);
        this.panelChangePass.buttonChangePass.addActionListener(this);
        this.personTable.buttonCancel.addActionListener(this);
        this.personTable.buttonCreate.addActionListener(this);
        this.panelNavigation.buttonAddEmployed.addActionListener(this);

        this.panelNavigation.buttonConsult.addActionListener(this);

        this.panelNavigation.tableEmployed.addMouseListener(this);

        // listar empleados
        showEmployedTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textUserName = new javax.swing.JTextField();
        buttonLogin = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textUserPass = new javax.swing.JPasswordField();
        buttonChangePass = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(19, 60, 72));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre de usuario: ");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Contraseña de usuario:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img2.png"))); // NOI18N

        buttonLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/confirmIcon.png"))); // NOI18N
        buttonLogin.setText("INICIAR SESION");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo.png"))); // NOI18N

        buttonChangePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/confirmIcon.png"))); // NOI18N
        buttonChangePass.setText("CAMBIAR CONTRASEÑA");
        buttonChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangePassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textUserName)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(textUserPass)
                    .addComponent(buttonChangePass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(91, 91, 91)
                .addComponent(jLabel4)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(116, 116, 116))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(textUserPass, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(buttonChangePass, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed

    }//GEN-LAST:event_buttonLoginActionPerformed

    private void buttonChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangePassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonChangePassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton buttonChangePass;
    public javax.swing.JButton buttonLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JPanel panelPrincipal;
    public javax.swing.JTextField textUserName;
    public javax.swing.JPasswordField textUserPass;
    // End of variables declaration//GEN-END:variables

    private void showWindow(JPanel panel) {
        this.panelPrincipal.setVisible(false);
        this.personTable.setVisible(false);
        this.panelNavigation.setVisible(false);
        this.panelChangePass.setVisible(false);
        panel.setVisible(true);
        this.setSize(panel.getWidth(), panel.getHeight() + 20);
        this.setLocationRelativeTo(null);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object event = e.getSource();
        // evento del boton de inicio de sesion
        if (event == this.buttonLogin) {
            if (this.textUserName.getText().isEmpty() && this.textUserPass.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Error ingrese un usuario y contraseña", "Error Inicio de sesion", 0);
            } else if (this.textUserName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Error ingrese un usuario", "Error Inicio de sesion", 0);
            } else if (this.textUserPass.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Error ingrese una contraseña", "Error Inicio de sesion", 0);
            } else {
                if (this.textUserName.getText().equals(user) && this.textUserPass.getText().equals(pass)) {
                    JOptionPane.showMessageDialog(null, "Bienvenido a la aplicacion", "Login", 1);
                    showWindow(panelNavigation);
                    showEmployedTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Error ingrese un usuario y contraseña validos", "Error Inicio de sesion", 0);
                }

            }
        }

        // cambiar contrasena
        if (event == this.panelChangePass.buttonChangePass) {
            if (this.panelChangePass.textPass.getText().equals(this.panelChangePass.textPass1.getText())) {
                pass = this.panelChangePass.textPass.getText();
                JOptionPane.showMessageDialog(null, "Cambio de contraseña exitoso");
                this.panelPrincipal.setSize(indexWidth, indexHeight);
                showWindow(this.panelPrincipal);
            } else {
                JOptionPane.showMessageDialog(null, "Error ingrese contraseñas iguales");
            }
        }

        // cambio de paneles por boton
        if (event == this.buttonChangePass) {
            showWindow(panelChangePass);
        }
        if (event == this.panelNavigation.buttonAddEmployed) {
            showWindow(this.personTable);
        }
        if (event == this.personTable.buttonCancel) {
            // listar empleados
            showEmployedTable();
            showWindow(this.panelNavigation);
        }

        // ingresar un nuevo empleado
        if (event == this.personTable.buttonCreate) {
            String firtsName = this.personTable.textFirtsName.getText();
            String lastName = this.personTable.textLastName.getText();
            String typeDocument = this.personTable.comboDocumentType.getItemAt(this.personTable.comboDocumentType.getSelectedIndex());
            String document = this.personTable.textDocument.getText();
            String email = this.personTable.textMail.getText();

            if (firtsName.isEmpty() || lastName.isEmpty() || typeDocument.isEmpty() || document.isEmpty() || email.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese todos los datos", "Error al validar informacion", 2);
            } else {
                // crear un empleado con la informacion dada
                Empleado employed = new Empleado(100000, "Trabajador", true, firtsName, lastName, typeDocument, document, email);
                insertEmployed(employed);
                JOptionPane.showMessageDialog(null, "Registro Exitoso", "Registro exitoso", 1);
            }

        }

        // Ver  a un empleado existente
        if (event == this.panelNavigation.buttonConsult) {
            showEmployedTable();
        }

    }

    private void showEmployedTable() {
        String query = "";
        if (this.panelNavigation.textSearchEmp.getText().isEmpty()) {
            query = "SELECT * FROM `empleados`";
        } else {
           query = "SELECT * FROM `empleados` WHERE nombreEmp LIKE '%" + this.panelNavigation.textSearchEmp.getText() + "%' or '%" + this.panelNavigation.textSearchEmp.getText() + "%'" ; 
        }
        try {
            ResultSet rs = conexion.doQuery(query);
            Object[] empleados = new Object[6];
            DefaultTableModel contenidoTabla = (DefaultTableModel) this.panelNavigation.tableEmployed.getModel();
            contenidoTabla.setRowCount(0);
            while (rs.next()) {
                empleados[0] = rs.getString("idEmp");
                empleados[1] = rs.getString("nombreEmp");
                empleados[2] = rs.getString("apellidos");
                empleados[3] = rs.getString("tipoDocumento");
                empleados[4] = rs.getString("documento");
                empleados[5] = rs.getString("correo");

                contenidoTabla.addRow(empleados);
            }

        } catch (SQLException e) {

        }
    }

    private void insertEmployed(Empleado employed) {
        String query = "INSERT INTO `empleados`(`nombreEmp`, `apellidos`, `tipoDocumento`, `documento`, `correo`) \n"
                + "VALUES  ( \"" + employed.getNombre() + "\", \"" + employed.getApellidos() + "\", \"" + employed.getTipoDocumento() + "\", \"" + employed.getDocumento() + "\", \"" + employed.getEmail() + "\")";
        try {
            Connection cn = conexion.getConnection();
            Statement st = cn.createStatement();
            st.executeUpdate(query);

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private ShowUserForm showUserInfo() {

        ShowUserForm showUserForm = new ShowUserForm(this, rootPaneCheckingEnabled);

        String idEmployed = (String) this.panelNavigation.tableEmployed.getValueAt(this.panelNavigation.selectedRow, 0);
        String firtsNaame = (String) this.panelNavigation.tableEmployed.getValueAt(this.panelNavigation.selectedRow, 1);
        String lastName = (String) this.panelNavigation.tableEmployed.getValueAt(this.panelNavigation.selectedRow, 2);
        String document = (String) this.panelNavigation.tableEmployed.getValueAt(this.panelNavigation.selectedRow, 4);
        String mail = (String) this.panelNavigation.tableEmployed.getValueAt(this.panelNavigation.selectedRow, 5);
        showUserForm.textId.setText(idEmployed);
        showUserForm.textFirtsName.setText(firtsNaame);
        showUserForm.textLastName.setText(lastName);
        showUserForm.textDocument.setText(document);
        showUserForm.textMail.setText(mail);

        return showUserForm;
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        Object event = e.getSource();
        if (event == this.panelNavigation.tableEmployed) {
            showUserInfo().setVisible(true);
            showEmployedTable();
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {
        Object event = e.getSource();
        if (event == this.panelNavigation.tableEmployed) {
            showEmployedTable();
        }
    }

    @Override
    public void mouseExited(MouseEvent e) {

    }
}
